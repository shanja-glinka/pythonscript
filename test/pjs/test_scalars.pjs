# test_scalars.pjs
# Расширенный тест базовых операций и try-except-finally

a = 10
b = 3

print(a + b)  # 13
print(a - b)  # 7
print(a * b)  # 30
print(a / b)  # 3.3333...
print(a ** b)  # 1000 (возведение в степень)

try:
    # Аналог JS: Math.floor(a / b)
    c = a // b
    d = a % b
    print(c, d)  # 3 1
    n = h / 0
except:
    print("Error!")
finally:
    print("Done!")

# Простое условие
if a > b:
    print("a больше b")
else:
    print("a меньше или равно b")

# Работа со списками
arr = [1, 2, 3]
print("Изначальный массив:", arr)
arr.append(4)
print("После добавления элемента:", arr)
arr.pop()
print("После удаления последнего элемента:", arr)

# Проверка наличия элемента (аналог arr.includes(2) в JS)
print("Массив содержит '2'? ->", 2 in arr)

# Работа со словарём (аналог объектов в JS)
obj = { 'x': 10, 'y': 20 }
print("Сумма obj.x + obj.y =", obj['x'] + obj['y'])

# Небольшая функция для сравнения значений
def compare_values(x, y):
    if x > y:
        print("Результат:", "{x} > {y}")
        print(f"{x} > {y}")
    elif x < y:
        print(f"{x} < {y}")
    else:
        print(f"{x} == {y}")

compare_values(5, 3)  # 5 > 3
compare_values(3, 5)  # 3 < 5
compare_values(4, 4)  # 4 == 4

# Пример простого класса
class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age
    def say_hello(self):
        print(f"Hello, my name is {self.name}, I am {self.age} years old.")

person = Person("Alice", 25)
person.say_hello()  # Hello, my name is Alice, I am 25 years old.
